defaultTasks 'info'

ext {
		PHP_TAG = getTheTag()
		PHP_CONTAINER_NAME = "pedido-api"
		PHP_IMAGE_NAME_DEV = "${PHP_CONTAINER_NAME}-dev:$PHP_TAG"
		PHP_WWW = "/var/www/html"
}

task 'info' << {
	println """
	tag      : ${project.PHP_TAG}
	container: ${project.PHP_CONTAINER_NAME}
	image    : ${project.PHP_IMAGE_NAME_DEV}
	project  : ${project.PHP_WWW}
	"""
}

/**
 * roda o sistema em modo dev
 * este método já chama o build e up necessário
 */
task 'build-dev' (type:Exec) {
}

/**
 * roda o sistema em modo test (com a base de dados do src)
 * este método já chama o build e up necessário
 */
task 'build-test' << {

}

/**
 * roda o php em modo dev
 * este método já chama o build e up necessário
 */
task 'build-php-dev' (type:Exec) {
	commandLine = ['docker', 'build', '--rm', '--tag', "${PHP_IMAGE_NAME_DEV}", '-f', 'docker/php/Dockerfile', '.']
}

/**
 * roda o mysql em modo dev
 * este método já chama o build e up necessário
 */
task 'build-mysql-dev' (type:Exec) {
	commandLine = ['docker', 'build', '--rm', '--tag', "${PHP_IMAGE_NAME_DEV}", '-f', 'docker/php/Dockerfile', '.']
}


/**
 * roda o sistema php
 */
task 'docker-php-up' << {

}

/**
 * roda o banco de dados consumindo os 
 * dados que estão salvos no projeto
 */
task 'docker-mysql-up' << {
	
}

/**
 * roda o banco de dados consumindo os 
 * dados da maquina do desenvolvedor
 */
task 'docker-mysql-up-dev' << {
	
}

/**
 * apaga todas as imagens e containers
 * gerados por este projeto
 */
task 'docker-clear' << {

}

def removeLast(String str) {
	str.substring(0, str.length()-1);
}
def getTheTag(){
	removeLast(['git', 'describe', '--abbrev=0', '--tags'].execute().text)
}